@use './utils/_variables';
@use './utils/_mixins';

@use './base/_reset';
@use './base/_base';
@use './base/_typography';
@use './base/_form';

@use './layout/_structure';

/*
* --------------------------------------------------
* routes/__index
* --------------------------------------------------
*/
.featured-collection {
  display: block;
  margin-bottom: 2rem;
  position: relative;
}

.featured-collection-image {
  aspect-ratio: 1 / 1;
  @media (min-width: 45em) {
    aspect-ratio: 16 / 9;
  }
}

.featured-collection img {
  height: auto;
  max-height: 100%;
  object-fit: cover;
}

.recommended-products-grid {
  display: grid;
  grid-gap: 1.5rem;
  grid-template-columns: repeat(2, 1fr);
  @media (min-width: 45em) {
    grid-template-columns: repeat(4, 1fr);
  }
}

.recommended-product img {
  height: auto;
}

/*
* --------------------------------------------------
* routes/collections._index.tsx
* --------------------------------------------------
*/

.collections {
  margin-top: 2rem;
}
.collections-grid {
  background: white;
  display: flex;
  width: 100%;
  flex-wrap: wrap;
  position: relative; /* wichtig */
}

.collections-grid::before {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 50%;
  width: 0.1rem;
  background-color: #000; /* oder deine Wunschfarbe */
  transform: translateX(-0.5px); /* exakt mittig */
  z-index: 1;
  height: calc(
    100% - 7rem
  ); /* Höhe anpassen, hier z.B. 3rem Abstand oben/unten */
}

.collections-grid h4 {
  padding: 0rem 0 1.8rem 1.8rem;
  font-weight: 400;
  font-size: 1.2rem;
}

.collections-grid > *:nth-child(odd) h4 {
  padding-left: 0;
}

.product-item {
  width: 50%;
}

.collection-item img {
  height: auto;
}

/*
* --------------------------------------------------
* routes/collections.$handle.tsx
* --------------------------------------------------
*/
.collection-description {
  margin-bottom: 1rem;
  max-width: 95%;
  @media (min-width: 45em) {
    max-width: 60rem;
  }
}

.products-grid {
  display: grid;
  grid-gap: 1.5rem;
  grid-template-columns: repeat(auto-fit, minmax(var(--grid-item-width), 1fr));
  margin-bottom: 2rem;
}

.product-item img {
  height: auto;
  width: 100%;
}

/*
* --------------------------------------------------
* routes/products.$handle.tsx
* --------------------------------------------------
*/

/*
* --------------------------------------------------
* routes/blog._index.tsx
* --------------------------------------------------
*/
.blog-grid {
  display: grid;
  grid-gap: 1.5rem;
  grid-template-columns: repeat(auto-fit, minmax(var(--grid-item-width), 1fr));
  margin-bottom: 2rem;
}

.blog-article-image {
  aspect-ratio: 3/2;
  display: block;
}

.blog-article-image img {
  height: 100%;
}

/*
* --------------------------------------------------
* routes/blog.$articlehandle.tsx
* --------------------------------------------------
*/
.article img {
  height: auto;
  width: 100%;
}

/*
* --------------------------------------------------
* routes/account
* --------------------------------------------------
*/

.account-logout {
  display: inline-block;
}

/* Baseline */
*,
*::before,
*::after {
  box-sizing: border-box;
}
html,
body {
  height: 100%;
}
body {
  margin: 0; /* entfernt UA-Body-Margin */
  font-family:
    system-ui,
    -apple-system,
    Segoe UI,
    Roboto,
    sans-serif;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}

/* Medien & Tabellen */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* Typografie-Resets (ohne Semantik zu killen) */
:where(h1, h2, h3, h4, h5, h6, p, figure, blockquote, dl, dd) {
  margin: 0;
}

/* Listen – optional global.
   Wenn du echte Inhaltslisten nutzt, lass das global weg
   und setz es nur bei Navs (.nav ul) o.ä. */
:where(ul, ol) {
  margin: 0;
  padding: 0;
}
:where(ul) {
  list-style: none;
}

/* Formulare konsistent */
:where(button, input, select, textarea) {
  font: inherit;
  color: inherit;
}
:where(button) {
  cursor: pointer;
}

/* Fokus sichtbar & schön (nicht entfernen!) */
:where(:focus-visible) {
  outline: 2px solid #2563eb;
  outline-offset: 2px;
}
